A pair of light themes for GUI Emacs, built on top of [[https://github.com/belak/base16-emacs][base16-emacs]], with some tweaks.

Namespace prefix: ~tarp/~

[[https://notes.neeasade.net/tarps.html][Screenshots]]

** Installation

First, install [[https://github.com/neeasade/ct.el#installation][ct.el]]. Then, install with [[https://github.com/raxod502/straight.el][straight.el]]:

#+begin_src emacs-lisp
(straight-use-package
 '(tarps
   :host github
   :repo "neeasade/tarps"
   :branch "master"))
#+end_src

*** Dependencies

- [[https://github.com/neeasade/color-tools.el][color-tools.el]]
- [[https://github.com/belak/base16-emacs][base16-emacs]]
- [[https://github.com/Wilfred/ht.el/][ht.el]]
- [[https://github.com/magnars/s.el][s.el]]
- [[https://github.com/Wilfred/helpful][helpful]]
- [[https://github.com/troyp/fn.el][fn.el]]

** Fishing

Tarp colorschemes come flavored against different backgrounds, for different levels of emphasis. This is to ensure the same contrast level across different contexts. The schemes are stored in a nested hash table, with a helper to access them -- EG ~(tarp/get :primary :strong)~ to get the primary foreground color meant to be used against the strong background (which you could get with ~(tarp/get :background :strong)~). The available background keys are: ~:normal :weak :strong :focused~. For each of those, the following foregrounds are available:

| label        | meaning                             | example                                      |
|--------------+-------------------------------------+----------------------------------------------|
| :foreground  | default foreground                  |                                              |
| :foreground+ | focused foreground                  | selected list item/search result             |
| :faded       | (foreground) faded                  | comments                                     |
| :primary     | (foreground) identity               | functions, variables                         |
| :assumed     | (foreground) assumptions/core stuff | builtins, key words                          |
| :alt         | (foreground) rarely used fg         | types, matching string within search results |
| :strings     | (foreground) strings                | strings                                      |

Some thoughts on general theme opinions:

- Strings are important enough to get their own color for emphasis because they represent the edges or barriers at which things communicate sometimes
- Identity between functions and variables can be blended (lisp-1 type of feel)
- "focused" colors should be consistent as an indicator of what's about to be selected/or where the cursor is
# - Different levels of BG sets allow for consistent communication across contrasted emphasis contexts

** Local edits

The function ~tarp/tweak-function~ will be called before base16 is bootstrapped. You may change all the values of the scheme through the hashtable variable ~tarp/theme~ here. An example is shown below. ~tarp/set~. You could do things here like enforce preferred contrast constraints, or try to account for your [[https://notes.neeasade.net/color-spaces.html#h-f23b8fe5-37a3-4ead-9d9d-a7139f76d532][viewing setting]].

#+begin_src emacs-lisp
(setq tarp/tweak-function
      (lambda ()
        ;; max chroma on the faded foreground
        (tarp/set :faded :normal
                  (ct-transform-lch-c
                   (tarp/get :faded)
                   100))

        ;; ensure a contrast ratio of 3.5:1 on the strings foreground
        (tarp/set :strings :normal
                  (ct-tint-ratio
                   (tarp/get :strings :normal)
                   (tarp/get :background :normal)
                   3.5))))
#+end_src

** Contrast dumping

Calling ~tarp/show-contrasts~ will show the contrast ratios of all the foregrounds against all the backgrounds.

** Thanks/Previous inspo

- [[https://github.com/MetroWind/lab-theme][lab-theme]]
- [[https://github.com/waymondo/apropospriate-theme][aproprospriate]]
- [[https://github.com/belak/base16-emacs][base16-emacs]]
